apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "statefulsetName" . }}
  labels:
{{ include "labels" . | indent 4 }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  revisionHistoryLimit: 3
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
{{ include "selectorLabels" . | indent 6 }}
  serviceName: {{ include "statefulsetName" . }}
  template:
    metadata:
      {{- if .Values.deployment.annotations }}
      annotations:
{{ tpl .Values.deployment.annotations . | indent 8 }}
      {{- end }}
      labels:
{{ include "labels" . | indent 8 }}
    spec:
      {{- if .Values.deployment.tolerations }}
      tolerations:
{{ toYaml .Values.deployment.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
{{ .Values.deployment.nodeSelector | toYaml | indent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.node.image.repo }}:{{ .Values.node.image.tag }}
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
            capabilities:
              add:
                - SYS_TIME
          env:
            - name: SERVICE
              value: {{ .Values.node.service }}
            - name: ROLE
              value: {{ .Values.node.role | quote }}
            - name: SEEDS
              value: {{ .Values.node.seeds }}
            - name: IS_AUTOGEN_CERT
              value: {{ .Values.node.isAutogenCert | quote }}
            - name: FASTEST_START
              value: {{ .Values.node.fastestStart | quote }}
            - name: CHECK_TIMEOUT
              value: {{ .Values.node.checkTimeout | quote }}
            - name: CHECK_PEER_STACK
              value: {{ .Values.node.checkPeerStack | quote }}
            - name: CHECK_BLOCK_STACK
              value: {{ .Values.node.checkBlockStack | quote }}
            - name: CHECK_INTERVAL
              value: {{ .Values.node.checkInterval | quote }}
            - name: CHECK_STACK_LIMIT
              value: {{ .Values.node.checkStackLimit | quote }}
            - name: GOLOOP_LOG_LEVEL
              value: {{ .Values.node.goloopLogLevel }}
            - name: LOG_OUTPUT_TYPE
              value: {{ .Values.node.logOutputType }}
          ports:
            - containerPort: {{ .Values.node.ports.p2p }}
              name: grpc
            - containerPort: {{ .Values.node.ports.rpc }}
              name: json-rpc
          livenessProbe:
            failureThreshold: 100
            httpGet:
              path: /admin/system
              port: json-rpc
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: {{ template "dataPVCName" . }}
              mountPath: /goloop/data
          resources:
{{ toYaml .Values.deployment.resources | indent 12 }}
        - name: health-sidecar
          image: {{ .Values.sidecar.image.repo }}:{{ .Values.sidecar.image.tag }}
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
          env:
            - name: BLOCK_HEIGHT_VARIANCE
              value: {{ .Values.sidecar.variance | quote }}
            - name: CRON_SLEEP_SEC
              value: {{ .Values.sidecar.checkInterval | quote }}
          ports:
            - containerPort: 80
              name: readyz
          readinessProbe:
            failureThreshold: 100
            httpGet:
              path: /readyz
              port: readyz
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 100m
              memory: 256Mi
  volumeClaimTemplates:
    - metadata:
        name: {{ template "dataPVCName" . }}
      spec:
        accessModes: {{ .Values.deployment.storage.accessModes }}
        {{- if .Values.deployment.storage.storageClassName }}
        storageClassName: {{ .Values.deployment.storage.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.deployment.storage.dataSize }}
        selector:
          matchLabels:
{{ toYaml .Values.deployment.storage.selectorLabels | indent 12 }}
